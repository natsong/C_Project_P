1.Dijkstra 算法思想

功能：

求出指定顶点到各个顶点的最短路径

实现：

1）三个数组记录

dist[]用于记录指定顶点到当前结点的最短路径
path[]用于记录指定顶点到当前结点最短路径中，当前结点的前驱
set []用于记录是否将当前顶点的值作为中间结点。

2）步骤：

a.记录指定顶点到当前顶点的直接路径后，开始找一个距离指定顶点或者中间顶点路径最短的一个顶点并入作为中间顶点。
b.并入作为中间顶点后，紧接着需要进行两步操作：将对应的set[]设置为1，将未并入的顶点重新评测dist[]值，看是最初的dist[]值小还是经过最新的中间顶点值比较小
c.如果经过中间顶点的dist[]值更小，则更新dist[]值和path[]值，知道所有的顶点对应的set[]数组值都为1.
d.此时path中存取的顶点串联起来得到最短路径。





2.Floyd算法思想

功能：

求出图中各两个顶点之间的最短路径

实现：

1）两个数组记录

A[i][j]用于记录顶点之间的路径情况.
path[i][j]用于记录i,j之间中间点情况


2）步骤：

a.先写出所有顶点对(i,j)其中i≠j
b.依次选取顶点v作为中间顶点，其中v≠i≠j
c.若A[i][j]>A[i][v]+A[v][j],则将A[i][j]值换成A[i][v]+A[v][j],且将Path[i][j]值换为v
d.循环以上操作知道，所有的顶点都被取完。所得到的A二维数组，即可记录各个顶点间最短路径。



