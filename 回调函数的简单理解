回调函数本质也是函数，只不过函数的参数是函数指针。当这个指针用来调用其所指向的函数时，这个被函数指针指向的函数就是回调函数。回调函数不是由该函数的实现方直接调用，而是在特定的时间或者条件发生时由另外一个方法调用的。

下面一段屑代码来解释一下

```c
#include <stdio.h>

void Call_B(char *str)
{
	printf("%s\n",str);
}
void test_A(void (*p)(char *str))//测试函数的参数为指向回调函数的指针
{
	int input=0;
	printf("请选择：1.老拜D握拳  2.老拜D赶记者\n");
	scanf("%d",&input);
	if(input==1)
		p("老拜D握拳--大的要来了");//调用传入的函数
	else
		printf("老拜D赶记者--大的来了");
}
int main()
{
	test_A(Call_B);
	return 0;
}
```
运行结果：

输入1 调用Call_B函数运行结果：
//
请选择：1.老拜D握拳  2.老拜D赶记者
1
老拜D握拳--大的要来了
Press any key to continue

输入2 不调用Call_B函数 运行结果：

//
请选择：1.老拜D握拳  2.老拜D赶记者
2
老拜D赶记者--大的来了Press any key to continue



可以简单的理解为某个函数在中利用回调函数指针形参接收回调函数地址，当有需要的时候（例如这里的输入1）就调用Call_B回调函数。


