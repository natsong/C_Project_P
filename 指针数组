如何有效的将三个数组存起来并输出呢？ 观察以下代码：

#include <stdio.h>

int main()
{
  int a[5]={1,2,3,4,5};
  int b[5]={2,3,4,5,6};
  int c[5]={3,4,5,6,7};
  
  int* p[3]={&a,&b,&c};
  int i=0;
  for(i=0;i<3;++i)
  {
    int j=0;
    for(j=0;j<5;++j)
    {
      printf("%d\t",*p[i]+j);
    }
    printf("\n");
  }
  return 0;
}

//输出结果：
1 2 3 4 5
2 3 4 5 6
3 4 5 6 7

//结果分析

int* p[3] 表示存储了3个指向int类型对象的指针 （注意区分 这个形式： int (*p)[3] , 这个形式表示指针p指向 一个3个整型变量的数组）

这里指针变量p[0]、p[1]、p[2]分别指向 a、b、c三个数组，而p因为是每个对应数组的首元素地址，因此每次偏移1会偏移指向下一个数组元素
例如P[0]是存取的int a[5]={1,2,3,4,5}的首元素地址，对于“*p[0]+1”实际上是先偏移再解引用，因为 + 的优先级比 * 的优先级要高。
